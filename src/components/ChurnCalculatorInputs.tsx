
import React from "react";
import { CardHeader, CardTitle, CardDescription, CardContent } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Slider } from "@/components/ui/slider";
import { Tooltip, TooltipProvider, TooltipTrigger, TooltipContent } from "@/components/ui/tooltip";
import { CUSTOMER_STEPS } from "@/utils/customerSteps";

interface ChurnCalculatorInputsProps {
  customerCount: number;
  setCustomerCount: React.Dispatch<React.SetStateAction<number>>;
  averageRevenuePerCustomer: number;
  setAverageRevenuePerCustomer: React.Dispatch<React.SetStateAction<number>>;
  currentChurnRate: number;
  setCurrentChurnRate: React.Dispatch<React.SetStateAction<number>>;
  customerSliderIndex: number;
  setSliderByIndex: (index: number) => void;
  handleCustomerCountInputChange: (setter: React.Dispatch<React.SetStateAction<number>>, value: string) => void;
  handleInputChange: (setter: React.Dispatch<React.SetStateAction<number>>, value: string, min: number, max: number) => void;
}

const InfoTooltip = ({ content }: { content: string }) => (
  <TooltipProvider>
    <Tooltip>
      <TooltipTrigger className="cursor-help">
        <img 
          src="/lovable-uploads/3bcc2d94-904f-483c-9d32-c019de350fd6.png" 
          alt="Info" 
          className="h-4 w-4" 
        />
      </TooltipTrigger>
      <TooltipContent side="right" align="start" className="max-w-[280px]">
        <p className="text-white text-opacity-95">{content}</p>
      </TooltipContent>
    </Tooltip>
  </TooltipProvider>
);

const ChurnCalculatorInputs = ({
  customerCount,
  setCustomerCount,
  averageRevenuePerCustomer,
  setAverageRevenuePerCustomer,
  currentChurnRate,
  setCurrentChurnRate,
  customerSliderIndex,
  setSliderByIndex,
  handleCustomerCountInputChange,
  handleInputChange
}: ChurnCalculatorInputsProps) => {
  return (
    <>
      <CardHeader>
        <CardTitle>Enter your data</CardTitle>
        <CardDescription>We'll use this to calculate your business impact</CardDescription>
      </CardHeader>
      <CardContent className="space-y-6">
        <div className="calculator-input">
          <div className="flex items-center justify-between">
            <Label htmlFor="customer-count" className="calculator-label">Number of customers</Label>
            <InfoTooltip content="The total number of customers." />
          </div>
          <div className="flex items-center gap-4">
            <Slider 
              id="customer-count" 
              min={0} 
              max={CUSTOMER_STEPS.length - 1} 
              step={1} 
              value={[customerSliderIndex]} 
              onValueChange={([idx]) => setSliderByIndex(idx)} 
              className="flex-1" 
            />
            <Input 
              type="number" 
              value={customerCount} 
              min={CUSTOMER_STEPS[0]} 
              max={CUSTOMER_STEPS[CUSTOMER_STEPS.length - 1]} 
              onChange={e => handleCustomerCountInputChange(setCustomerCount, e.target.value)} 
              className="w-24" 
            />
          </div>
        </div>

        <div className="calculator-input">
          <div className="flex items-center justify-between">
            <Label htmlFor="average-revenue" className="calculator-label">Average revenue per customer (USD/month)</Label>
            <InfoTooltip content="The average monthly revenue generated by each customer." />
          </div>
          <div className="flex items-center gap-4">
            <Slider 
              id="average-revenue" 
              min={10} 
              max={200} 
              step={1} 
              value={[averageRevenuePerCustomer]} 
              onValueChange={value => setAverageRevenuePerCustomer(value[0])} 
              className="flex-1" 
            />
            <Input 
              type="number" 
              value={averageRevenuePerCustomer} 
              onChange={e => handleInputChange(setAverageRevenuePerCustomer, e.target.value, 10, 200)} 
              className="w-24" 
            />
          </div>
        </div>

        <div className="calculator-input">
          <div className="flex items-center justify-between">
            <Label htmlFor="current-churn" className="calculator-label">Current churn rate</Label>
            <InfoTooltip content="Your current customer churn rate as a percentage." />
          </div>
          <div className="flex items-center gap-4">
            <Slider 
              id="current-churn" 
              min={1} 
              max={20} 
              step={1} 
              value={[currentChurnRate]} 
              onValueChange={value => setCurrentChurnRate(value[0])} 
              className="flex-1" 
            />
            <Input 
              type="number" 
              value={currentChurnRate} 
              onChange={e => handleInputChange(setCurrentChurnRate, e.target.value, 1, 20)} 
              className="w-24" 
            />
          </div>
        </div>

        <div className="calculator-input">
          <div className="flex items-center justify-between">
            <Label htmlFor="churn-reduction" className="calculator-label">Estimated churn reduction (%)</Label>
            <InfoTooltip content="The standard reduction in churn rate based on Product Fruits data." />
          </div>
          <div className="flex items-center gap-4">
            <span className="font-medium text-sm text-neutral-500">30%</span>
          </div>
        </div>
      </CardContent>
    </>
  );
};

export default ChurnCalculatorInputs;
